{"version":3,"sources":["modules/modal.js"],"names":["angular","templateUrl","provider","template","this","defaults","contentTemplate","container","element","backdrop","keyboard","html","show","$get","forEach","trim","requestAnimationFrame","bodyElement","backdropCount","backdropBaseZindex","$window","$rootScope","$bsCompiler","$animate","$timeout","$sce","dimensions","ModalFactory","config","enterAnimateCallback","scope","$emit","options","prefixEvent","$modal","toggle","$isShown","removeClass","prefixClass","focus","modalElement","unbindBackdropEvents","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyUp","evt","destroyModalElement","modalScope","$destroy","$element","$options","extend","key","promise","trustAsHtml","$scope","$new","$hide","$$postDigest","$id","id","attr","$show","hide","css","position","bottom","right","compileData","left","init","data","destroy","after","isElement","parent","z-index","link","clonedElement","defaultPrevented","display","addClass","enter","minor","backdropAnimation","animation","el","then","safeDigest","bindBackdropEvents","version","leave","leaveAnimateCallback","unbindKeyboardEvents","which","directive","$root","$$phase","restrict","query","document","querySelectorAll","$promise","compile","dialogBaseZindex","isDefined","falseValueRegExp","$observe","newValue","oldValue","bsModal","$watch","content","modal","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true\n    };\n\n    this.$get = function($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var trim = String.prototype.trim;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n\n      function ModalFactory(config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        if(!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n\n        // Support scope as string options\n        forEach(['title', 'content'], function(key) {\n          if(options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $modal.$isShown = scope.$isShown = false;\n\n        // Fetch, compile then initialize modal\n        var compileData, modalElement, modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        backdropElement.css({position:'fixed', top:'0px', left:'0px', bottom:'0px', right:'0px'});\n        promise.then(function(data) {\n          compileData = data;\n          $modal.init();\n        });\n\n        $modal.init = function() {\n\n          // Options: show\n          if(options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function() {\n\n          // Remove element\n          destroyModalElement();\n\n          // remove backdrop element\n          if(backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n        };\n\n        $modal.show = function() {\n          if($modal.$isShown) return;\n\n          var parent, after;\n          if(angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          } else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n\n          // destroy any existing modal elements\n          if(modalElement) destroyModalElement();\n\n          // create a new scope, so we can destroy it and all child scopes\n          // when destroying the modal element\n          modalScope = $modal.$scope.$new();\n          // Fetch a cloned element linked from template (noop callback is required)\n          modalElement = $modal.$element = compileData.link(modalScope, function(clonedElement, scope) {});\n\n          if(options.backdrop) {\n              // set z-index\n              modalElement.css({'z-index': dialogBaseZindex + (backdropCount * 20)});\n              backdropElement.css({'z-index': backdropBaseZindex + (backdropCount * 20)});\n\n              // increment number of backdrops\n              backdropCount++;\n          }\n\n          if(scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n\n          // Set the initial positioning.\n          modalElement.css({display: 'block'}).addClass(options.placement);\n\n          // Options: animation\n          if(options.animation) {\n            if(options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n\n          if(options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if(angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n          if(options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n        }\n\n        $modal.hide = function() {\n          if(!$modal.$isShown) return;\n\n          if(options.backdrop) {\n              // decrement number of modals\n              backdropCount--;\n          }\n\n          if(scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if(angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n\n          if(options.backdrop) {\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n\n        function leaveAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          bodyElement.removeClass(options.prefixClass + '-open');\n          if(options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n\n        $modal.toggle = function() {\n\n          $modal.$isShown ? $modal.hide() : $modal.show();\n\n        };\n\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function(evt) {\n\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n\n        };\n\n        function bindBackdropEvents() {\n          if(options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n\n        function unbindBackdropEvents() {\n          if(options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n\n        function bindKeyboardEvents() {\n          if(options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents() {\n          if(options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        // Private helpers\n\n        function hideOnBackdropClick(evt) {\n          if(evt.target !== evt.currentTarget) return;\n          options.backdrop === 'static' ? $modal.focus() : $modal.hide();\n        }\n\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n\n        function destroyModalElement() {\n          if($modal.$isShown && modalElement !== null) {\n            // un-bind events\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n\n          if(modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n\n          if(modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function safeDigest(scope) {\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n      }\n\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return ModalFactory;\n\n    };\n\n  })\n\n  .directive('bsModal', function($window, $sce, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function(key) {\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\n            options[key] = false;\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsModal && scope.$watch(attr.bsModal, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}